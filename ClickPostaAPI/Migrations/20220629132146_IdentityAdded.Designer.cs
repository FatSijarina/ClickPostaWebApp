// <auto-generated />
using System;
using ClickPostaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClickPostaAPI.Migrations
{
    [DbContext(typeof(ClickPostaDBContext))]
    [Migration("20220629132146_IdentityAdded")]
    partial class IdentityAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ClickPostaAPI.Models.Depo", b =>
                {
                    b.Property<int>("DepoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DepoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepoId"), 1L, 1);

                    b.Property<int?>("AddressNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("StreetName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("DepoId");

                    b.HasIndex("ZipCode");

                    b.ToTable("Depo");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.DepoSektori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DepoId")
                        .HasColumnType("int")
                        .HasColumnName("Depo_Id");

                    b.Property<int>("SektoriId")
                        .HasColumnType("int")
                        .HasColumnName("Sektori_Id");

                    b.HasKey("Id");

                    b.HasIndex("DepoId");

                    b.HasIndex("SektoriId");

                    b.ToTable("Depo_Sektori", (string)null);
                });

            modelBuilder.Entity("ClickPostaAPI.Models.Porosia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DepoSektoriId")
                        .HasColumnType("int")
                        .HasColumnName("DepoSektoriID");

                    b.Property<int?>("DerguesiId")
                        .HasColumnType("int")
                        .HasColumnName("DerguesiID");

                    b.Property<string>("Detajet")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Emertimi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("MarresiId")
                        .HasColumnType("int")
                        .HasColumnName("MarresiID");

                    b.Property<string>("Materiali")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ReceiverAddressDetails")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Receiver_AddressDetails");

                    b.Property<string>("ReceiverEmri")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Receiver_Emri");

                    b.Property<int?>("ReceiverHomeNumber")
                        .HasColumnType("int")
                        .HasColumnName("Receiver_HomeNumber");

                    b.Property<string>("ReceiverMbiemri")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Receiver_Mbiemri");

                    b.Property<string>("ReceiverNrTelefonit")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Receiver_NrTelefonit");

                    b.Property<string>("ReceiverStreetName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("Receiver_StreetName");

                    b.Property<int?>("ReceiverZipCode")
                        .HasColumnType("int")
                        .HasColumnName("Receiver_ZipCode");

                    b.Property<string>("SenderAddressDetails")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Sender_AddressDetails");

                    b.Property<string>("SenderEmri")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Sender_Emri");

                    b.Property<int?>("SenderHomeNumber")
                        .HasColumnType("int")
                        .HasColumnName("Sender_HomeNumber");

                    b.Property<string>("SenderMbiemri")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Sender_Mbiemri");

                    b.Property<string>("SenderNrTelefonit")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Sender_NrTelefonit");

                    b.Property<string>("SenderStreetName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("Sender_StreetName");

                    b.Property<int?>("SenderZipCode")
                        .HasColumnType("int")
                        .HasColumnName("Sender_ZipCode");

                    b.Property<int?>("StatusiPorosiseId")
                        .HasColumnType("int")
                        .HasColumnName("StatusiPorosiseID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<decimal>("Vellimi")
                        .HasColumnType("decimal(3,2)");

                    b.HasKey("Id");

                    b.HasIndex("DepoSektoriId");

                    b.HasIndex("DerguesiId");

                    b.HasIndex("MarresiId");

                    b.HasIndex("ReceiverZipCode");

                    b.HasIndex("SenderZipCode");

                    b.HasIndex("StatusiPorosiseId");

                    b.HasIndex("UserId");

                    b.ToTable("Porosia");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.Pushimi", b =>
                {
                    b.Property<int>("PushimiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PushimiID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PushimiId"), 1L, 1);

                    b.Property<string>("DataFilimit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DataMbarimit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("PushimiId");

                    b.HasIndex("UserId");

                    b.ToTable("Pushimi");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.QA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Answer")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Question")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Q_A", (string)null);
                });

            modelBuilder.Entity("ClickPostaAPI.Models.Qyteti", b =>
                {
                    b.Property<int>("QytetiZipCode")
                        .HasColumnType("int");

                    b.Property<string>("EmriQytetit")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("QytetiZipCode")
                        .HasName("PK_Qyteti_5EC2763866B27A01");

                    b.ToTable("Qyteti");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.RezervoVeturen", b =>
                {
                    b.Property<int>("RezervimiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RezervimiID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervimiId"), 1L, 1);

                    b.Property<string>("DataKthimit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DataRezervimit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int?>("VeturaId")
                        .HasColumnType("int")
                        .HasColumnName("VeturaID");

                    b.HasKey("RezervimiId")
                        .HasName("PK_RezervoV_6F6B8C2BEA3FE425");

                    b.HasIndex("UserId");

                    b.HasIndex("VeturaId");

                    b.ToTable("RezervoVeturen");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("RoleName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.Sektori", b =>
                {
                    b.Property<int>("SektoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SektoriID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SektoriId"), 1L, 1);

                    b.Property<string>("Emertimi")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("SektoriId");

                    b.ToTable("Sektori");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.StatusiPorosise", b =>
                {
                    b.Property<int>("StatusiPorosiseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusiPorosiseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusiPorosiseId"), 1L, 1);

                    b.Property<string>("Statusi")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("StatusiPorosiseId");

                    b.ToTable("StatusiPorosise");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.Useri", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AddressDetails")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DitetEpushimit")
                        .HasColumnType("int")
                        .HasColumnName("DitetEPushimit");

                    b.Property<string>("Email")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<int?>("HomeNumber")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Mbiemri")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("NrPorosive")
                        .HasColumnType("int");

                    b.Property<string>("NrTelefonit")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Orari")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("UserId")
                        .HasName("PK_Useri_1788CCAC95425909");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.HasIndex("ZipCode");

                    b.HasIndex(new[] { "Email" }, "UQ_Useri_A9D1053442E0C7D8")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ClickPostaAPI.Models.Vetura", b =>
                {
                    b.Property<int>("VeturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VeturaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VeturaId"), 1L, 1);

                    b.Property<string>("Brendi")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("DepoId")
                        .HasColumnType("int")
                        .HasColumnName("DepoID");

                    b.Property<string>("Modeli")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Targa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Tipi")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<decimal?>("Vellimi")
                        .HasColumnType("decimal(4,2)");

                    b.HasKey("VeturaId");

                    b.HasIndex("DepoId");

                    b.ToTable("Vetura");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ClickPostaAPI.Models.Depo", b =>
                {
                    b.HasOne("ClickPostaAPI.Models.Qyteti", "ZipCodeNavigation")
                        .WithMany("Depo")
                        .HasForeignKey("ZipCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_DepoZipCode_398D8EEE");

                    b.Navigation("ZipCodeNavigation");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.DepoSektori", b =>
                {
                    b.HasOne("ClickPostaAPI.Models.Depo", "Depo")
                        .WithMany("DepoSektori")
                        .HasForeignKey("DepoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Depo_SektDepo__3E52440B");

                    b.HasOne("ClickPostaAPI.Models.Sektori", "Sektori")
                        .WithMany("DepoSektori")
                        .HasForeignKey("SektoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Depo_SektSekto_3F466844");

                    b.Navigation("Depo");

                    b.Navigation("Sektori");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.Porosia", b =>
                {
                    b.HasOne("ClickPostaAPI.Models.DepoSektori", "DepoSektori")
                        .WithMany("Porosia")
                        .HasForeignKey("DepoSektoriId")
                        .HasConstraintName("FK_PorosiaDepoSek_6754599E");

                    b.HasOne("ClickPostaAPI.Models.Useri", "Derguesi")
                        .WithMany("PorosiaDerguesi")
                        .HasForeignKey("DerguesiId")
                        .HasConstraintName("FK_PorosiaDergues_68487DD7");

                    b.HasOne("ClickPostaAPI.Models.Useri", "Marresi")
                        .WithMany("PorosiaMarresi")
                        .HasForeignKey("MarresiId")
                        .HasConstraintName("FK_PorosiaMarresi_66603565");

                    b.HasOne("ClickPostaAPI.Models.Qyteti", "ReceiverZipCodeNavigation")
                        .WithMany("PorosiaReceiverZipCodeNavigation")
                        .HasForeignKey("ReceiverZipCode")
                        .HasConstraintName("FK_PorosiaReceive_656C112C");

                    b.HasOne("ClickPostaAPI.Models.Qyteti", "SenderZipCodeNavigation")
                        .WithMany("PorosiaSenderZipCodeNavigation")
                        .HasForeignKey("SenderZipCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_PorosiaSender__6383C8BA");

                    b.HasOne("ClickPostaAPI.Models.StatusiPorosise", "StatusiPorosise")
                        .WithMany("Porosia")
                        .HasForeignKey("StatusiPorosiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_PorosiaStatusi_693CA210");

                    b.HasOne("ClickPostaAPI.Models.Useri", "User")
                        .WithMany("PorosiaUser")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_PorosiaUserID_619B8048");

                    b.Navigation("DepoSektori");

                    b.Navigation("Derguesi");

                    b.Navigation("Marresi");

                    b.Navigation("ReceiverZipCodeNavigation");

                    b.Navigation("SenderZipCodeNavigation");

                    b.Navigation("StatusiPorosise");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.Pushimi", b =>
                {
                    b.HasOne("ClickPostaAPI.Models.Useri", "User")
                        .WithMany("Pushimi")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_PushimiUserID_49C3F6B7");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.RezervoVeturen", b =>
                {
                    b.HasOne("ClickPostaAPI.Models.Useri", "User")
                        .WithMany("RezervoVeturen")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_RezervoVeUserI_4F7CD00D");

                    b.HasOne("ClickPostaAPI.Models.Vetura", "Vetura")
                        .WithMany("RezervoVeturen")
                        .HasForeignKey("VeturaId")
                        .HasConstraintName("FK_RezervoVeVetur_5070F446");

                    b.Navigation("User");

                    b.Navigation("Vetura");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.Useri", b =>
                {
                    b.HasOne("ClickPostaAPI.Models.Role", "Role")
                        .WithMany("Useri")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_UseriRoleID_46E78A0C");

                    b.HasOne("ClickPostaAPI.Models.Qyteti", "ZipCodeNavigation")
                        .WithMany("Useri")
                        .HasForeignKey("ZipCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_UseriZipCode_45F365D3");

                    b.Navigation("Role");

                    b.Navigation("ZipCodeNavigation");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.Vetura", b =>
                {
                    b.HasOne("ClickPostaAPI.Models.Depo", "Depo")
                        .WithMany("Vetura")
                        .HasForeignKey("DepoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_VeturaDepoID_4CA06362");

                    b.Navigation("Depo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ClickPostaAPI.Models.Useri", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ClickPostaAPI.Models.Useri", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClickPostaAPI.Models.Useri", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ClickPostaAPI.Models.Useri", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClickPostaAPI.Models.Depo", b =>
                {
                    b.Navigation("DepoSektori");

                    b.Navigation("Vetura");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.DepoSektori", b =>
                {
                    b.Navigation("Porosia");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.Qyteti", b =>
                {
                    b.Navigation("Depo");

                    b.Navigation("PorosiaReceiverZipCodeNavigation");

                    b.Navigation("PorosiaSenderZipCodeNavigation");

                    b.Navigation("Useri");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.Role", b =>
                {
                    b.Navigation("Useri");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.Sektori", b =>
                {
                    b.Navigation("DepoSektori");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.StatusiPorosise", b =>
                {
                    b.Navigation("Porosia");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.Useri", b =>
                {
                    b.Navigation("PorosiaDerguesi");

                    b.Navigation("PorosiaMarresi");

                    b.Navigation("PorosiaUser");

                    b.Navigation("Pushimi");

                    b.Navigation("RezervoVeturen");
                });

            modelBuilder.Entity("ClickPostaAPI.Models.Vetura", b =>
                {
                    b.Navigation("RezervoVeturen");
                });
#pragma warning restore 612, 618
        }
    }
}
